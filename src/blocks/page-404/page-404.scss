/* stylelint-disable indentation */
/* stylelint-disable custom-property-empty-line-before */
/* stylelint-disable string-quotes */
/* stylelint-disable selector-not-notation */
/* stylelint-disable declaration-empty-line-before */
/* stylelint-disable block-closing-brace-newline-before */
/* stylelint-disable unit-allowed-list */
/* stylelint-disable order/properties-order */
/* stylelint-disable color-function-notation */
/* stylelint-disable rule-empty-line-before */
/* stylelint-disable scss/double-slash-comment-empty-line-before */
:root {
  --chess-border-width: calc(var(--chess-diameter-tile) / 60);
  --chess-diameter-board: min(75vw, 75vh);
  --chess-diameter-tile: calc(1 / 8 * var(--chess-diameter-board));
  --chess-edge-width: calc((min(90vw, 90vh) - var(--chess-diameter-board)) * 0.3);
  --chess-color-danger: tomato;
  --chess-color-success: #1d83e0;
  --chess-color-white: #f0f0f0;
  --chess-color-black: #222;
  --chess-color-shadow: #074df3;
  --chess-color-shadow-lighter: #074df3;
  --chess-transition-ease: cubic-bezier(0.25, 1, 0.5, 1);
  --chess-color-background: var(--chess-color-black);
  @include media-tablet {
    --chess-diameter-board: min(230px, 230px);
    --chess-edge-width: calc(((256px - var(--chess-diameter-board)) / 2));
  }
}

.page-404 {
  display: flex;
  flex-direction: column;
  gap: 30px;
  padding: 90px 0;
  @include media-tablet {
    gap: 45px;
    width: fit-content;
    margin: 0 auto;
    padding: 105px 0;
  }
  @include media-laptop {
    flex-direction: row;
    justify-content: space-between;
    gap: 60px;
  }
  &__text {
    @include media-laptop {
      max-width: 400px;
    }
  }
  &__ui-h1 {
    margin-bottom: 25px;
  }
  &__ui-p1 {
    @include media-laptop {
      margin-bottom: 25px;
    }
  }
  &__decor {
    @include media-tablet {
      display: flex;
      gap: 35px;
      width: fit-content;
      margin: 0 auto;
    }
    @include media-laptop {
      margin: 0;
    }
  }
  &__num {
    display: none;
    @include media-tablet {
      display: block;
      flex-shrink: 0;
    }
    @include media-laptop {
      width: 192px;
    }
  }
  &__game {
    flex-shrink: 0;
    padding: var(--chess-edge-width);
    aside {
      display: none;
      // display: flex;
      justify-content: space-between;
      left: 0;
      position: absolute;
      top: calc(var(--chess-edge-width) * -0.55);
      transform: translateY(-50%);
      width: 100%;
      z-index: 999;
    }

    aside div {
      align-items: center;
      color: white;
      display: flex;
    }

    aside div>* {
      align-items: center;
      display: flex;
    }

    aside div>*+* {
      margin-left: calc(var(--chess-border-width) * 2);
    }

    aside div h3,
    aside div label {
      font-size: calc(var(--chess-edge-width) * 0.3);
      height: calc(var(--chess-edge-width) * 0.3);
      line-height: 1;
      margin-bottom: 0;
      margin-top: 0;
      text-transform: uppercase;
    }

    aside div label {
      cursor: pointer;
    }

    aside div input {
      left: -99999px;
      position: absolute;
    }

    aside div input+* {
      opacity: 0.5;
    }

    aside div input:checked+* {
      font-weight: bold;
      opacity: 1;
    }

    aside div svg {
      height: calc(var(--chess-edge-width) * 0.5);
      width: auto;
    }

    html,
    body {
      height: 100%;
    }

    body {
      background: var(--chess-color-background);
      overflow: hidden;
      transition: background-color 250ms ease-in-out;
    }

    #view {
      background: var(--chess-color-shadow-lighter);
      box-shadow: 0 0 0 calc(var(--chess-border-width) * 3) var(--chess-color-shadow-lighter),
        0 0 0 var(--chess-edge-width) var(--chess-color-shadow);
      height: var(--chess-diameter-board);
      // margin: calc((100vh - var(--chess-diameter-board)) * 0.5) calc((100vw - var(--chess-diameter-board)) * 0.5);
      position: relative;
      width: var(--chess-diameter-board);
    }

    .board {
      display: flex;
      flex-direction: column-reverse;
      height: 100%;
      width: 100%;
    }

    .board .row {
      display: flex;
      height: var(--chess-diameter-tile);
      width: 100%;
    }

    .perspective-black .board .row {
      flex-direction: row-reverse;
    }

    .perspective-black .board {
      flex-direction: column;
    }

    .board .row .tile {
      background-color: currentcolor;
      border: none;
      box-shadow: inset 0 0 0 var(--chess-border-width) var(--chess-color-shadow-lighter);
      display: flex;
      flex-direction: column;
      height: var(--chess-diameter-tile);
      justify-content: space-between;
      padding: 0;
      position: relative;
      transition: background-color 350ms var(--chess-transition-ease);
      width: var(--chess-diameter-tile);
    }

    .perspective-black .board .row:nth-child(even) .tile:nth-child(odd),
    .perspective-black .board .row:nth-child(odd) .tile:nth-child(even),
    .perspective-white .board .row:nth-child(even) .tile:nth-child(even),
    .perspective-white .board .row:nth-child(odd) .tile:nth-child(odd) {
      // color: hsl(var(--color-board-hue), var(--color-board-sat), 62%);
      color: #5587ff;
    }

    .perspective-black .board .row:nth-child(even) .tile:nth-child(even),
    .perspective-black .board .row:nth-child(odd) .tile:nth-child(odd),
    .perspective-white .board .row:nth-child(even) .tile:nth-child(odd),
    .perspective-white .board .row:nth-child(odd) .tile:nth-child(even) {
      // color: hsl(var(--color-board-hue), var(--color-board-sat), 70%);
      color: #8baeff;
    }

    .board .row .tile .move,
    .board .row .tile .moves,
    .board .row .tile .captures {
      box-sizing: border-box;
      display: flex;
      flex-wrap: wrap;
      height: var(--chess-diameter-tile);
      justify-content: center;
      left: 0;
      padding: calc(var(--chess-diameter-tile) * 0.025);
      position: absolute;
      top: 0;
      width: var(--chess-diameter-tile);
      z-index: 9;
    }

    .board .row .tile .move,
    .board .row .tile .moves {
      align-content: center;
      align-items: center;
    }

    .board .row .tile .captures {
      align-items: flex-start;
      justify-content: space-between;
    }

    .board .row .tile:not(.occupied) .captures {
      align-items: center;
      justify-content: center;
    }

    .board .row .tile>div>svg {
      --stroke: transparent;
      box-sizing: border-box;
      height: var(--di);
      line-height: var(--di);
      width: var(--di);
    }

    .board .row .tile .move svg {
      --di: calc(var(--chess-diameter-tile) / 4);
      --fill: var(--chess-color-shadow);
    }

    .board .row .tile .moves svg,
    .board .row .tile .captures svg {
      --di: calc(var(--chess-diameter-tile) / 4);
      --fill: var(--chess-color-shadow);
      opacity: 0.4;
    }

    .board .row .tile.occupied .captures svg {
      position: absolute;
    }

    .board .row .tile.occupied .captures svg:nth-child(1) {
      top: 0;
      left: 0;
    }

    .board .row .tile.occupied .captures svg:nth-child(2) {
      top: 0;
      right: 0;
    }

    .board .row .tile.occupied .captures svg:nth-child(3) {
      bottom: calc(var(--di) * 0.1);
      left: 0;
    }

    .board .row .tile.occupied .captures svg:nth-child(4) {
      bottom: calc(var(--di) * 0.1);
      right: 0;
    }

    .board .row .tile.occupied .captures svg:nth-child(5) {
      top: calc(50% - var(--di) * 0.55);
      left: 0;
    }

    .board .row .tile.occupied .captures svg:nth-child(6) {
      top: calc(50% - var(--di) * 0.55);
      right: 0;
    }

    .board .row .tile.occupied .captures svg:nth-child(7) {
      top: 0;
      left: calc(50% - var(--di) * 0.5);
    }

    .board .row .tile.occupied .captures svg:nth-child(8) {
      bottom: calc(var(--di) * 0.1);
      left: calc(50% - var(--di) * 0.5);
    }

    .touching .board .row .tile .moves,
    .touching .board .row .tile .captures,
    .turn-black .board .row .tile .moves .white,
    .turn-black .board .row .tile .captures .white,
    .turn-white .board .row .tile .moves .black,
    .turn-white .board .row .tile .captures .black {
      display: none;
    }

    .board .row .tile[class*="highlight-"] .moves,
    .board .row .tile[class*="highlight-"] .captures {
      display: none;
    }

    button:focus {
      outline: none;
      position: relative;
      z-index: 9;
    }

    svg {
      --fill: var(--chess-color-black);
      --stroke: var(--chess-color-shadow);
      fill: var(--fill);
    }

    svg.white {
      --fill: var(--chess-color-white);
    }

    svg.black {
      --fill: var(--chess-color-black);
    }

    .pieces {
      display: block;
      height: var(--chess-diameter-board);
      left: 0;
      pointer-events: none;
      position: absolute;
      top: 0;
      width: var(--chess-diameter-board);
      z-index: 99;
    }

    .pieces .piece.white {
      --pos-row: -1;
    }

    .pieces .piece.black {
      --pos-row: 8;
    }

    .pieces .piece {
      --pos-col: 3.5;
      --scale: 0;
      --transition-delay: 0ms;
      --transition-duration: 200ms;
      bottom: 0;
      display: block;
      height: var(--chess-diameter-tile);
      position: absolute;
      left: 0;
      transform: translate(calc(var(--pos-col) * 100%),
          calc(var(--pos-row) * -100%)) translateZ(0);
      transform-origin: 50% 50%;
      transition: all var(--transition-duration) var(--chess-transition-ease) var(--transition-delay);
      width: var(--chess-diameter-tile);
    }

    .perspective-black .pieces .piece {
      transform: translate(calc((7 - var(--pos-col)) * 100%),
          calc((7 - var(--pos-row)) * -100%)) translateZ(0);
    }

    .pieces .piece svg {
      display: block;
      left: 50%;
      opacity: 1;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%) translateZ(0) scale(var(--scale));
      transform-origin: 50% 50%;
      transition: transform var(--transition-duration) var(--chess-transition-ease),
        fill var(--transition-duration) var(--chess-transition-ease),
        opacity var(--transition-duration) var(--chess-transition-ease);
    }

    .turn-white .pieces .piece:not(.highlight-capture) svg.black,
    .turn-black .pieces .piece:not(.highlight-capture) svg.white,
    .turn-black .pieces .piece:not(.can-move):not(.can-capture) svg.black,
    .turn-white .pieces .piece:not(.can-move):not(.can-capture) svg.white {
      --stroke: transparent;
      opacity: 0.8;
    }

    /* stylelint-disable-next-line at-rule-empty-line-before */
    @keyframes wobble {

      0%,
      50%,
      100% {
        transform: translate(-50%, -50%) translateZ(0) scale(1) rotate(0deg);
      }

      25% {
        transform: translate(-50%, -50%) translateZ(0) scale(1.1) rotate(-2deg);
      }

      75% {
        transform: translate(-50%, -50%) translateZ(0) scale(1.1) rotate(2deg);
      }
    }

    .pieces .piece.highlight-active svg {
      animation: wobble 500ms linear infinite;
      --stroke: var(--chess-color-success);
    }

    .pieces .piece.highlight-capture svg {
      --stroke: var(--chess-color-danger);
    }

    .piece svg {
      --svg-di: calc(var(--chess-diameter-tile) * 0.666);
      display: block;
      font-weight: bold;
      height: var(--svg-di);
      left: 50%;
      line-height: var(--svg-di);
      position: absolute;
      stroke-linejoin: round;
      text-align: center;
      top: 50%;
      transform: translate(-50%, -50%);
      width: var(--svg-di);
    }
  }
}
